PS-3
Q.9. Consider a very small dictionary that contains the translations of English words to Dutch as  shown below:  
english_dutch = {"last" : "laatst", "week" : "week", "the" : "de", "royal" : "koninklijk",  "festival" : "feest", 
"hall" : "hal", "saw" : "zaag", "first" : "eerst", "performance" : "optreden",  "of" : "van", "a" : "een", 
"new" : "nieuw", "symphony" : "symphonie", "by" : "bij", "one" : "een",  "world" : "wereld", "leading" : "leidend", 
"modern" : "modern", "composer" : "componist",  "composers" : "componisten", "two" : "twee", "shed" : "schuur", "sheds" : "schuren" }  
Write a program that uses this dictionary to create a word-for-word translation of a sentence to  be taken as an input from the user. 
A word for which you cannot find a translation, you can  leave “as is.” The dictionary is supposed to be used case-insensitively, 
but your translation may  consist of all lower-case words. It is nice if you leave punctuation in the translation, but if you  take it out, 
that is acceptable (as leaving punctuation in is quite a bit of work and does not really  have anything to do with dictionaries – besides, 
leaving punctuation in is much easier to do once  you have learned about regular expressions).  



english_dutch = {"last" : "laatst", "week" : "week", "the" : "de",
                 "royal" : "koninklijk","festival" : "feest",
                 "hall" : "hal", "saw" : "zaag", "first" : "eerst",
                 "performance" : "optreden","of" : "van", "a" : "een",
                 "new" : "nieuw", "symphony" : "symphonie", "by" : "bij",
                 "one" : "een","world" : "wereld", "leading" : "leidend",
                 "modern" : "modern", "composer" : "componist",
                 "composers" : "componisten", "two" : "twee",
                 "shed" : "schuur", "sheds" : "schuren" }
string = input("Enter Sentenance Which You Want To Convert Into Dutch :-")
dutch = ""
words = list(string.split(' '))
for word in words:
    word = word.lower()
    if word in english_dutch.keys():
        dutch = dutch + english_dutch[word] + ''
    else:
        dutch = dutch + word + ''
print(string)
print(dutch)